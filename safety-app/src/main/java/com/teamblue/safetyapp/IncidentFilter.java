package com.teamblue.safetyapp;

import java.io.FileInputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
//import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;

import com.google.api.core.ApiFuture;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.FirestoreOptions;
import com.google.cloud.firestore.GeoPoint;
import com.google.cloud.firestore.WriteResult;
import com.teamblue.safetyapp.Models.Report;

public class IncidentFilter {
    public static void filterIncidents(Report data) throws IOException, InterruptedException, ExecutionException {
        if (!(data.getReportType().equals("Non-Crime") || data.getReportType().equals("eCrash"))) {

            FileInputStream serviceAccount = new FileInputStream(
                    "C:\\Users\\hagri\\Desktop\\campus-safety-294f4-firebase-adminsdk-lc5oa-5c74129f44.json");
            // C:\\Users\\hagri\\Desktop\\campus-safety-294f4-firebase-adminsdk-lc5oa-5c74129f44.json
            FirestoreOptions firestoreOptions = FirestoreOptions.getDefaultInstance().toBuilder()
                    .setCredentials(GoogleCredentials.fromStream(serviceAccount))
                    .setProjectId("campus-safety-294f4")
                    .build();
            Firestore db = firestoreOptions.getService();

            GeoPoint location = new GeoPoint(data.getLocation().getLatitude(), data.getLocation().getLongitude());

            LocalDateTime localDateTime = data.getReportDateTime();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String formattedDateTime = localDateTime.format(formatter);
            ZonedDateTime zonedDateTime = ZonedDateTime.parse(formattedDateTime, formatter);
            Date date = Date.from(zonedDateTime.toInstant());

            DocumentReference docRef = db.collection("reports").document(data.getReportName());

            Map<String, Object> ReportData = new HashMap<>();
            ReportData.put("reportDescription", data.getReportDescription());
            ReportData.put("reportName", "Autogenerated Report From LSUPD");
            ReportData.put("reportType", data.getReportType());
            ReportData.put("status", data.getStatus());
            ReportData.put("location", location);
            ReportData.put("reportDateTime", date);

            ApiFuture<WriteResult> future = docRef.update(ReportData);
            future.get();

            // Send to Map Manager if incident is not a non-crime or e-crash
            // MapManager.sendToDatabase(data);
        }
    }
}
